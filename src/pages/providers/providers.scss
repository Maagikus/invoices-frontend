@use "sass:math";
@import "../../styles/mixins.scss";




// Подключение миксинов ===========================================================================================================================================================================================================================================================================


// Подключение шрифтов ===========================================================================================================================================================================================================================================================================
//&display=swap - добавить при подключении через плагин
@import url("https://fonts.googleapis.com/css?family=Roboto:100,100italic,300,300italic,regular,italic,500,500italic,700,700italic,900,900italic&display=swap");
// Подключить если есть локальные файлы шрифтов


// Подключение иконочных шрифтов ==============================================================================================================================================================================================================================================================================
// Подключить если есть файл иконочного шрифта

// ============================================================================================================================================================================================================================================================================================================================================================================================
// Настройки шаблона ============================================================================================================================================================================================================================================================================================================================================================================================
// ============================================================================================================================================================================================================================================================================================================================================================================================

// Шрифт по умолчанию ==============================================================================================================================================================================================================================================================================
$fontFamily: "Roboto";
$fontSize: rem(18); // где 14(px) - размер шрифта по умолчанию из макета

// Основные цвета
$mainColor: #2F2E41; // Цвет шрифта по умолчанию
$mainYellow: #FBBD00;
// Настройки адаптивной сетки ===============================================================================================================================================================================================================================================================================================

// Минимальная ширина страницы
$minWidth: 320;
// Ширина полотна (макета)
$maxWidth: 1920;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1557;
// Общий отступ у контейнера
// (30 = по 15px слева и справа, 0 = нет отступа)
$containerPadding: 20;

// Ширина срабатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поинты
$pc: em($containerWidth); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении
$tablet: em(991.98); // Планшеты, некоторые телефоны в горизонтальном положении
$mobile: em(767.98); // Телефоны L
$mobileSmall: em(479.98); // Телефоны S

// Тип адаптива:
// 1 = отзывчивость (у контейнера нет брейкпоинтов),
// 2 = по брейк-поинтам (контейнер меняет свою ширину по брейк-поинтам)
$responsiveType: 1;

// [class*="-ibg"] {
// 	position: relative;

// 	img {
// 		position: absolute;
// 		width: 100%;
// 		height: 100%;
// 		top: 0;
// 		left: 0;
// 		object-fit: cover;
// 	}
// }

@font-face {
	font-family: icons;
	font-display: swap;
	src: url("../../../fonts/icomoon.woff2") format("woff2"),
		url("../../../fonts/icomoon.woff") format("woff");
	font-weight: 400;
	font-style: normal;
}



._icon-search:before {
	content: "\e91a";
	font-family: 'icons' !important;
	color: #fbbd00;
}

._icon-Filter:before {
	content: "\e91b";
	font-family: 'icons' !important;
	color: #000;
}

// .spollers__title::after,
// [class*="_icon-"]:before {
// 	font-family: "icons";
// 	font-style: normal;
// 	font-weight: normal;
// 	font-variant: normal;
// 	text-transform: none;
// 	line-height: 1;
// 	-webkit-font-smoothing: antialiased;
// 	-moz-osx-font-smoothing: grayscale;
// }

// [class*="_icon-"]:before {
// 	display: block;
// }

// ============================================================================================================================================================================================================================================================================================================================================================================================
// ============================================================================================================================================================================================================================================================================================================================================================================================

// Обнуление ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================


// Стили тега BODY ============================================================================================================================================================================================================================================================================================================================================================================================

body {
	background: linear-gradient(180deg, #FFFFFF 57.85%, #FFE2A1 100%);
	background-size: cover;
	background-repeat: no-repeat;
	background-attachment: fixed;

	// Скролл заблокирован
	.lock & {
		overflow: hidden;
		touch-action: none;
		overscroll-behavior: none;
	}

	// Сайт загружен
	.loaded & {}
}

// Оболочка wrapper ============================================================================================================================================================================================================================================================================================================================================================================================================================================
.wrapper {
	min-height: 100%;
	display: flex;
	flex-direction: column;
	overflow: hidden;
	// background: linear-gradient(180deg, #FFFFFF 57.85%, #FFE2A1 100%);
	// background: linear-gradient(180deg, #FFFFFF 57.85%, #FFF8E7 100%);

	// Прижимаем footer
	>main {
		flex: 1 1 auto;
	}

	// Фикс для слайдеров
	>* {
		min-width: 0;
	}
}

// Ограничивающий контейнер ======================================================================================================================================================================================================================

/*
(i) Стили будут применяться ко 
всем классам содержащим *__container
Например header__container, main__container и т.д.
Снипет (HTML): cnt
*/
@if ($responsiveType==1) {

	// Отзывчивая
	[class*="__container"] {
		@if ($maxWidthContainer>0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
			margin: 0 auto;
		}

		@if ($containerPadding>0) {
			padding: 0 rem(math.div($containerPadding, 2));
		}
	}
}

@else {

	// По брейк-поинтам
	[class*="__container"] {
		margin: 0 auto;

		@if ($maxWidthContainer>0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
		}

		@else {
			@if ($containerPadding>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}

		@media (max-width: $pc) {
			max-width: rem(970);
		}

		@media (max-width: $tablet) {
			max-width: rem(750);
		}

		@media (max-width: $mobile) {
			max-width: none;

			@if ($containerPadding>0 and $maxWidthContainer>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
	}
}

// Подключение базовых стилей, шаблонов (заготовок) и вспомогательных  классов
// Для подключения/отключения конкретных стилей смотри base.scss


.providersPage {
	@include adaptiveValue("padding-top", 174, 81);
	@include adaptiveValue("padding-bottom", 100, 37);
	position: relative;

	// .providersPage__container
	&__container {}
}

.providersPage {

	// .providersPage__container
	&__container {}

	// .providersPage__wrapper
	&__wrapper {
		display: flex;
		flex-direction: column;
		@include adaptiveValue("gap", 165, 38);

	}

	// .providersPage__header
	&__header {
		align-self: center
	}

	// .providersPage__title
	&__title {
		@include adaptiveValue("font-size", 50, 20);
		font-weight: 500;
		line-height: math.div(60, 50);
		color: #FBBD00;
	}

	// .providersPage__body
	&__body {}
}

.body-providersPage {


	@media (min-width:$mobile) {
		display: flex;
		@include adaptiveValue("gap", 92, 5);
	}

	// .body-providersPage__filters
	&__filters {
		// max-width: rem(310);

		@media (min-width:$mobile) {
			flex: 0 0 310px;
		}

	}

	// .body-providersPage__content
	&__content {
		display: flex;
		flex-direction: column;
		@include adaptiveValue("gap", 42, 29);
	}
}

.content-providersPage {

	// .content-providersPage__pagination
	&__pagination {
		align-self: flex-end;

		@media (max-width:$mobile) {
			align-self: center;
		}
	}

	// .content-providersPage__body
	&__body {}

	// .content-providersPage__list
	&__list {
		display: grid;
		grid-template-columns: repeat(4, minmax(82px, 255.61px));
		@include adaptiveValue("column-gap", 34.05, 26);
		@include adaptiveValue("row-gap", 30.97, 23);
		padding: 0px rem(0);

		@media (max-width:$mobile) {
			// padding: 0px rem(10);
		}

		@media (max-width:$tablet) {
			grid-template-columns: repeat(3, minmax(82px, 255.61px));
		}
	}

	&__item {
		padding: 6px 6px;
		background-color: #fff;

		// flex: 0 1 25%;
		@media (min-width:$mobile) {
			border: 3px solid #FBBD00;
			border-radius: 25px;
		}
	}

	&__image-ibg {
		padding-bottom: percent(115, 230);

	}
}

.pagination-providersPage {

	&__list {
		display: flex;
		@include adaptiveValue("gap", 12, 6);
	}

	&__item {
		cursor: pointer;
		font-weight: 400;
		@include adaptiveValue("font-size", 20, 16);
		line-height: math.div(20, 23);
		width: 31px;
		height: 31px;
		border-radius: 50%;
		background-color: transparent;
		display: flex;
		align-items: center;
		justify-content: center;
		transition: all 0.3s ease 0s;

		@media (max-width:$mobile) {
			width: 20px;
			height: 20px;
		}

		&.active {
			color: #fff;
			background: #FBBD00;
		}

		@media (any-hover: hover) {
			&:hover {
				color: #fff;
				background: #FBBD00;
			}
		}

	}

}

.provider-industry {
	display: flex;
	flex-direction: column;
	@include adaptiveValue("gap", 9, 9);

	&__title {
		display: flex;
		align-items: center;
		justify-content: space-between;
		cursor: pointer;
		font-weight: 400;
		@include adaptiveValue("font-size", 20, 15);
		line-height: math.div(23, 20);
		color: #3F3D56;

		@media (max-width:$tablet) {
			min-width: 250px;
		}


		// &.active {
		// 	&::after {
		// 		transform: rotate(0deg);

		// 	}
		// }

		&::after {
			content: '';
			width: 0;
			height: 0;
			border: 0 solid transparent;
			border-left-width: 7.1px;
			border-right-width: 7.1px;
			border-top: 9.5px solid black;
			transform: rotate(0deg);
			transition: all 0.3s ease 0s;
		}
	}

	&__body {
		display: flex;
		flex-direction: column;
		gap: rem(10);
		padding: 6px 5px 5px 8px;
		background: #FFFFFF;
		border: 1px solid #E6E6E6;
		border-radius: 10px;
	}

	&__checkbox {
		display: flex;

		.checkbox__text {



			font-weight: 400;
			@include adaptiveValue("font-size", 18, 15);
			line-height: math.div(21, 18);
			color: #3F3D56;


		}

		.checkbox__label {
			flex: 0 1 100%;
			justify-content: space-between;
			flex-direction: row-reverse;

			&::before {
				width: 15px;
				height: 15px;
				flex: 0 0 15px;
				border-radius: 50%;
				border: 1px solid #CCCCCC;
				transition: all 0.3s ease 0s;
				background-color: #fff;

			}
		}

		.checkbox__input.checked+.checkbox__label:before {
			background: $mainYellow;
		}
	}
}

.filters-providersPage {
	&__form {
		display: flex;
		flex-direction: column;
		@include adaptiveValue("gap", 25, 17);
	}

	&__wrapper {
		display: flex;
		flex-direction: column;
		@include adaptiveValue("gap", 25, 17);

		@media (min-width:$mobile) {}

		@media (max-width:$mobile) {
			position: absolute;
			width: 100%;
			height: 100%;
			top: 0;
			left: -100%;
			transition: all 0.3s ease 0s;
			align-items: center;
			justify-content: center;
			z-index: 10;
			background-color: #fff;

			&.opened {
				left: 0;
			}

		}
	}

	&__item-space {
		gap: rem(34);
		display: flex;
		flex-direction: column;
		margin-bottom: 25px;


	}

	&__title {
		font-weight: 700;
		@include adaptiveValue("font-size", 20, 15);
		line-height: math.div(23, 18);
		color: #3F3D56;

		span {
			&::before {
				display: none;
			}
		}

		@media (max-width:$mobile) {
			display: flex;
			gap: rem(35);
			align-items: center;

			span {
				&::before {
					display: block;
				}
			}

		}
	}

	&__title-mobile {
		display: none;

		// &::before {
		// 	display: none;

		// }

		@media (max-width:$mobile) {
			display: flex;
			gap: rem(7);
			align-items: center;
			margin: 0px 0px 41px 0px;


			&::after {
				content: '';
				display: block;
				width: 14px;
				height: 11px;
				background: url('../../img/filter.svg') 0 0 no-repeat;
			}



		}
	}

	&__input-search {
		margin-bottom: 25px;
		position: relative;

	}

	&__item {
		position: relative;
		z-index: 11;

		&::before {
			position: absolute;
			width: 16px;
			height: 16px;
			top: 9px;
			left: 19px;
			font-size: rem(16);

		}
	}

	&__input {
		background: #FFFFFF;
		border: 2px solid #FBBD00;
		border-radius: 5px;
		padding-left: 49px !important;
		font-weight: 500;
		font-size: rem(15);
		line-height: math.div(18, 15);
		height: rem(33);
		max-width: 302px;
		outline: none;

		@media (max-width:$mobile) {
			max-width: 274px;
		}

		&::placeholder {
			font-weight: 500;
			font-size: 15px;
			line-height: 18px;
			color: #FBBD00;

			&::before {
				content: "\e91a";
				color: #fbbd00;

			}

		}
	}

	&__checkboxes {
		display: flex;
		flex-direction: column;
		gap: rem(13);
	}

	&__checkbox {
		display: flex;

		&:not(:last-child) {
			margin: 0 !important;
		}

		.checkbox__text {
			font-weight: 400;
			@include adaptiveValue("font-size", 18, 15);
			line-height: math.div(21, 18);
			color: #3F3D56;
		}

		.checkbox__label {
			flex: 0 1 100%;

			&::before {
				width: 15px;
				height: 15px;
				flex: 0 0 15px;
				align-self: center;
				border-radius: 50%;
				border: 1px solid #FBBD00;
				transition: all 0.3s ease 0s;
				background-color: #fff;

			}
		}

		.checkbox__input.checked+.checkbox__label:before {
			background: $mainYellow;
		}
	}

}